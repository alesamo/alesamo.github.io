{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/breadcrumbs.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"names":["title","id","className","data-aos","Link","to","itemProp","data","location","post","markdownRemark","siteTitle","site","siteMetadata","previous","next","frontmatter","description","excerpt","data-aos-delay","itemScope","itemType","images","map","image","src","alt","category","dangerouslySetInnerHTML","__html","html","fields","slug","rel","preview","style","textAlign"],"mappings":"uJAsBA,IAnBoB,SAAC,GAAa,IAAZA,EAAW,EAAXA,MAElB,OACI,2BAASC,GAAG,cAAcC,UAAU,cAAcC,WAAS,WACvD,uBAAKD,UAAU,aAEX,uBAAKA,UAAU,qDACf,0BAAKF,GACL,0BACI,0BAAI,gBAAC,EAAAI,KAAD,CAAMC,GAAG,IAAIC,SAAS,OAAtB,SACJ,0BAAKN,S,+FC+DzB,UArEyB,SAAC,GAAwB,IAAD,EAArBO,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBb,QAAxB,QACVc,EAAmBP,EAAnBO,SAAUC,EAASR,EAATQ,KAElB,OACE,gBAAC,IAAD,CAAQP,SAAUA,EAAUR,MAAOW,GACjC,gBAAC,IAAD,CACEX,MAAOS,EAAKO,YAAYhB,MACxBiB,YAAaR,EAAKO,YAAYC,aAAeR,EAAKS,UAGpD,gBAAC,IAAD,CAAalB,MAAOS,EAAKO,YAAYhB,QAErC,2BAASC,GAAG,oBAAoBC,UAAU,oBAAoBC,WAAS,UAAUgB,iBAAe,MAAMC,WAAS,EAACC,SAAS,6BACzH,uBAAKnB,UAAU,aAEb,uBAAKA,UAAU,+BAEb,uBAAKA,UAAU,2CACZO,EAAKO,YAAYM,OAAOC,KAAI,SAACC,GAAD,OAC3B,uBAAKC,IAAK,iBAAmBD,EAAOtB,UAAU,YAAYwB,IAAI,SAIlE,uBAAKxB,UAAU,uCACb,sBAAIA,UAAU,OACZ,0BAAI,0CAAJ,KAA+B,wBAAMD,GAAG,iBAAiBQ,EAAKO,YAAYW,WACzElB,EAAKO,YAAYC,YAAc,0BAAI,6CAAJ,KAAmCR,EAAKO,YAAYC,aAAoB,QAM9G,uBAAKf,UAAU,6BAA6B0B,wBAAyB,CAAEC,OAAQpB,EAAKqB,MAAQxB,SAAS,kBAMvG,uBAAKJ,UAAU,gCACb,sBAAIA,UAAU,SACd,uBAAKA,UAAU,OACZY,GACC,gBAAC,EAAAV,KAAD,CAAMC,GAAIS,EAASiB,OAAOC,KAAMC,IAAI,OAAO/B,UAAU,gCACnD,uBAAKuB,IAAKX,EAASE,YAAYkB,UAC/B,uBAAKC,MAAO,CAACC,UAAW,UACtB,0CACA,8BAAStB,EAASE,YAAYhB,SAInCe,GACC,gBAAC,EAAAX,KAAD,CAAMC,GAAIU,EAAKgB,OAAOC,KAAMC,IAAI,OAAO/B,UAAW,mBAAqBY,EAAW,GAAK,iBACrF,2BACE,sCACA,8BAASC,EAAKC,YAAYhB,QAE5B,uBAAKyB,IAAKV,EAAKC,YAAYkB","file":"component---src-templates-blog-post-js-2652bee0fa07bb73cdff.js","sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nconst Breadcrumbs = ({title}) => {\r\n\r\n    return (\r\n        <section id=\"breadcrumbs\" className=\"breadcrumbs\" data-aos=\"fade-up\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                <h2>{title}</h2>\r\n                <ol>\r\n                    <li><Link to=\"/\" itemProp=\"url\">Home</Link></li>\r\n                    <li>{title}</li>\r\n                </ol>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Breadcrumbs","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Breadcrumbs from \"../components/breadcrumbs\"\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n\r\n      <Breadcrumbs title={post.frontmatter.title}/>\r\n\r\n      <article id=\"portfolio-details\" className=\"portfolio-details\" data-aos=\"fade-up\" data-aos-delay=\"100\" itemScope itemType=\"http://schema.org/Article\">\r\n      <div className=\"container\">\r\n\r\n        <div className=\"portfolio-details-container\">\r\n\r\n          <div className=\"owl-carousel portfolio-details-carousel\">\r\n            {post.frontmatter.images.map((image) =>\r\n              <img src={\"/img/projects/\" + image} className=\"img-fluid\" alt=\"\"/>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"portfolio-info col-12 col-lg-4 mb-5\">\r\n            <ul className=\"m-0\">\r\n              <li><strong>Category</strong>: <span id=\"post-category\">{post.frontmatter.category}</span></li>\r\n              {post.frontmatter.description ? <li><strong>Description</strong>: {post.frontmatter.description}</li> : null}\r\n            </ul>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"portfolio-description mb-4\" dangerouslySetInnerHTML={{ __html: post.html }} itemProp=\"articleBody\">\r\n        </div>\r\n\r\n      </div>\r\n    </article>\r\n\r\n      <nav className=\"blog-post-nav container my-4\">\r\n        <hr className=\"mb-4\"/>\r\n        <div className=\"row\">\r\n          {previous && (\r\n            <Link to={previous.fields.slug} rel=\"prev\" className=\"col-12 col-lg-6 mb-2 mb-lg-0\">\r\n              <img src={previous.frontmatter.preview} />\r\n              <div style={{textAlign: \"right\"}}>\r\n                <span>← Previous</span>\r\n                <strong>{previous.frontmatter.title}</strong>\r\n              </div>\r\n            </Link>\r\n          )}\r\n          {next && (\r\n            <Link to={next.fields.slug} rel=\"next\" className={\"col-12 col-lg-6\" + (previous ? \"\" : \" offset-lg-6\")}>\r\n              <div>\r\n                <span>Next →</span>\r\n                <strong>{next.frontmatter.title}</strong>\r\n              </div>\r\n              <img src={next.frontmatter.preview} />\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </nav>\r\n\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"DD/MM/YYYY\")\r\n        description\r\n        category\r\n        images\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        preview\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        preview\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}